{"ast":null,"code":"var _jsxFileName = \"E:\\\\Side Hustle\\\\DAO\\\\app\\\\src\\\\Components\\\\Dashboard\\\\TransferShares\\\\TransferShares.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { ComponentContext } from \"../../../ComponentContext/ComponentContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransferShares = () => {\n  _s();\n  const {\n    state\n  } = useContext(ComponentContext);\n  const {\n    contract,\n    web3\n  } = state;\n  const [Input, setInput] = useState({\n    address: \"\",\n    amount: \"\"\n  });\n  useEffect(() => {\n    console.log(\"Input \", Input);\n  }, [Input]);\n  const getValues = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name, value);\n    setInput(prevInput => ({\n      ...prevInput,\n      [name]: value\n    }));\n  };\n  const transaferShares = async e => {\n    if (!Input.amount || !Input.address) {\n      console.log(\"Field must be filled\");\n      return;\n    }\n    try {\n      e.preventDefault();\n      const {\n        amount,\n        address\n      } = Input;\n      const toWei = await web3.utils.toWei(amount.toString(), \"ether\");\n      await contract.methods.transferShare;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createProp-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transfer Shares\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Amount in Wei\",\n          name: \"amount\",\n          value: Input.amount,\n          onChange: getValues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Recipient Address \",\n          name: \"address\",\n          value: Input.address,\n          onChange: getValues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: transaferShares,\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TransferShares, \"15eUD9DfCzIYKpGp3VuFGRFzCug=\");\n_c = TransferShares;\nexport default TransferShares;\nvar _c;\n$RefreshReg$(_c, \"TransferShares\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","ComponentContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TransferShares","_s","state","contract","web3","Input","setInput","address","amount","console","log","getValues","e","name","value","target","prevInput","transaferShares","preventDefault","toWei","utils","toString","methods","transferShare","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","action","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/Side Hustle/DAO/app/src/Components/Dashboard/TransferShares/TransferShares.jsx"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { ComponentContext } from \"../../../ComponentContext/ComponentContext\";\r\n\r\nconst TransferShares = () => {\r\n  const { state } = useContext(ComponentContext);\r\n  const { contract, web3 } = state;\r\n  const [Input, setInput] = useState({\r\n    address: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Input \", Input);\r\n  }, [Input]);\r\n  const getValues = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(name, value);\r\n\r\n    setInput((prevInput) => ({\r\n      ...prevInput,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  const transaferShares = async (e) => {\r\n    if (!Input.amount || !Input.address) {\r\n      console.log(\"Field must be filled\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      e.preventDefault();\r\n\r\n      const { amount, address } = Input;\r\n      const toWei = await web3.utils.toWei(amount.toString(), \"ether\");\r\n\r\n      await contract.methods.transferShare;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"createProp-box\">\r\n        <h2>Transfer Shares</h2>\r\n        <form action=\"\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Amount in Wei\"\r\n            name=\"amount\"\r\n            value={Input.amount}\r\n            onChange={getValues}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Recipient Address \"\r\n            name=\"address\"\r\n            value={Input.address}\r\n            onChange={getValues}\r\n          />\r\n          <button type=\"submit\" onClick={transaferShares}>\r\n            Transfer\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransferShares;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}