{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MMO\\\\OneDrive\\\\Desktop\\\\DAO\\\\app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Navbar from \"./components/NavBar/Navbar.\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport HeroSection from \"./components/HeroSection/HeroSection\";\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\"; // Note: Web3 should not be destructured\nimport DAO from \"./contractABI/DAO.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [state, setState] = useState({\n    web3: null,\n    contract: null\n  });\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\n        const web3 = new Web3(provider);\n        const networkId = await web3.eth.net.getId();\n        console.log(\"Network ID:\", networkId);\n        const deployedNetwork = DAO.networks[networkId];\n        console.log(\"Deployed Network:\", deployedNetwork);\n        if (deployedNetwork) {\n          const contract = new web3.eth.Contract(DAO.abi, deployedNetwork.address);\n          setState({\n            web3: web3,\n            contract: contract\n          });\n        } else {\n          console.error(`Contract not deployed on network with ID ${networkId}`);\n        }\n      } catch (error) {\n        console.error(\"Error initializing web3 and contract:\", error);\n      }\n    };\n    init();\n  }, []);\n  useEffect(() => {\n    console.log(\"State updated:\", state);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"primary-section\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeroSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pBZKqWI9zcS5mfjE2YUgdEw667Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Dashboard","HeroSection","useEffect","useState","Web3","DAO","jsxDEV","_jsxDEV","App","_s","state","setState","web3","contract","init","provider","providers","HttpProvider","networkId","eth","net","getId","console","log","deployedNetwork","networks","Contract","abi","address","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MMO/OneDrive/Desktop/DAO/app/src/App.jsx"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./components/NavBar/Navbar.\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport HeroSection from \"./components/HeroSection/HeroSection\";\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\"; // Note: Web3 should not be destructured\nimport DAO from \"./contractABI/DAO.json\";\n\nconst App = () => {\n  const [state, setState] = useState({ web3: null, contract: null });\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:7545\"\n        );\n        const web3 = new Web3(provider);\n        const networkId = await web3.eth.net.getId();\n        console.log(\"Network ID:\", networkId);\n\n        const deployedNetwork = DAO.networks[networkId];\n        console.log(\"Deployed Network:\", deployedNetwork);\n\n        if (deployedNetwork) {\n          const contract = new web3.eth.Contract(\n            DAO.abi,\n            deployedNetwork.address\n          );\n          setState({ web3: web3, contract: contract });\n        } else {\n          console.error(\n            `Contract not deployed on network with ID ${networkId}`\n          );\n        }\n      } catch (error) {\n        console.error(\"Error initializing web3 and contract:\", error);\n      }\n    };\n\n    init();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"State updated:\", state);\n  }, [state]);\n\n  return (\n    <section className=\"primary-section\">\n      <Navbar />\n      <Dashboard />\n      <HeroSection />\n    </section>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,6BAA6B;AAChD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,MAAM,CAAC,CAAC;AACzB,OAAOC,GAAG,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IAAES,IAAI,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;EAElEX,SAAS,CAAC,MAAM;IACd,MAAMY,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,MAAMC,QAAQ,GAAG,IAAIX,IAAI,CAACY,SAAS,CAACC,YAAY,CAC9C,uBACF,CAAC;QACD,MAAML,IAAI,GAAG,IAAIR,IAAI,CAACW,QAAQ,CAAC;QAC/B,MAAMG,SAAS,GAAG,MAAMN,IAAI,CAACO,GAAG,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC;QAC5CC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,SAAS,CAAC;QAErC,MAAMM,eAAe,GAAGnB,GAAG,CAACoB,QAAQ,CAACP,SAAS,CAAC;QAC/CI,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,eAAe,CAAC;QAEjD,IAAIA,eAAe,EAAE;UACnB,MAAMX,QAAQ,GAAG,IAAID,IAAI,CAACO,GAAG,CAACO,QAAQ,CACpCrB,GAAG,CAACsB,GAAG,EACPH,eAAe,CAACI,OAClB,CAAC;UACDjB,QAAQ,CAAC;YAAEC,IAAI,EAAEA,IAAI;YAAEC,QAAQ,EAAEA;UAAS,CAAC,CAAC;QAC9C,CAAC,MAAM;UACLS,OAAO,CAACO,KAAK,CACX,4CAA4CX,SAAS,EACvD,CAAC;QACH;MACF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF,CAAC;IAEDf,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEb,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAASuB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAClCxB,OAAA,CAACR,MAAM;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5B,OAAA,CAACP,SAAS;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACb5B,OAAA,CAACN,WAAW;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA9CID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}