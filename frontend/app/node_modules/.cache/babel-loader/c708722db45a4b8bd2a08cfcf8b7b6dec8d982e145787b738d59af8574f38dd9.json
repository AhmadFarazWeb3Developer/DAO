{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MMO\\\\OneDrive\\\\Desktop\\\\DAO\\\\app\\\\src\\\\Components\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { ComponentContext } from \"../../ComponentContext/ComponentContext\";\nimport \"./Main.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = ({\n  component\n}) => {\n  _s();\n  const {\n    state,\n    sender\n  } = useContext(ComponentContext);\n  const {\n    contract\n  } = state;\n  const [ProposalList, setProposalList] = useState([]);\n  const [InverstorList, setInvestorList] = useState([]);\n  useEffect(() => {\n    try {\n      const setLists = async () => {\n        const proposalList = await contract.methods.ProposalList().call();\n        setProposalList(proposalList);\n        console.log(proposalList);\n        const investorList = await contract.methods.InvestorList().call();\n        setInvestorList(investorList);\n        console.log(InverstorList);\n      };\n      contract && setLists();\n    } catch (error) {\n      console.error(error);\n    }\n  }, [state, sender]);\n  useEffect(() => {\n    const setLists = async () => {\n      try {\n        const proposalList = await contract.methods.ProposalList().call();\n        setProposalList(proposalList);\n        const investorList = await contract.methods.InvestorList().call();\n        setInvestorList(investorList);\n        contract && setLists();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main-section\",\n      children: [component, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"investorList\",\n        className: \"lists\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Investor's List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), InverstorList.map(list => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"investor-list\",\n            children: list\n          }, list, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"proposalList\",\n        className: \"lists\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Proposal's List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Proposal ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recipient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Votes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Executed?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: ProposalList.map(list => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"proposal-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: parseInt(list.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: list.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: parseInt(list.amount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: list.receipient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: parseInt(list.votes) / 1e18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(parseInt(list.end) * 1000).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: list.isExecuted ? \"Yes\" : \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, list.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"primary-section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"Zr3AX76Szj6fITNAWTe+QiUm8W8=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useContext","ComponentContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","component","_s","state","sender","contract","ProposalList","setProposalList","InverstorList","setInvestorList","setLists","proposalList","methods","call","console","log","investorList","InvestorList","error","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","map","list","parseInt","description","amount","receipient","votes","Date","end","toLocaleString","isExecuted","_c","$RefreshReg$"],"sources":["C:/Users/MMO/OneDrive/Desktop/DAO/app/src/Components/Main/Main.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { ComponentContext } from \"../../ComponentContext/ComponentContext\";\r\nimport \"./Main.css\";\r\nconst Main = ({ component }) => {\r\n  const { state, sender } = useContext(ComponentContext);\r\n  const { contract } = state;\r\n  const [ProposalList, setProposalList] = useState([]);\r\n  const [InverstorList, setInvestorList] = useState([]);\r\n  useEffect(() => {\r\n    try {\r\n      const setLists = async () => {\r\n        const proposalList = await contract.methods.ProposalList().call();\r\n        setProposalList(proposalList);\r\n        console.log(proposalList);\r\n        const investorList = await contract.methods.InvestorList().call();\r\n        setInvestorList(investorList);\r\n        console.log(InverstorList);\r\n      };\r\n      contract && setLists();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [state, sender]);\r\n\r\n  useEffect(() => {\r\n    const setLists = async () => {\r\n      try {\r\n        const proposalList = await contract.methods.ProposalList().call();\r\n        setProposalList(proposalList);\r\n\r\n        const investorList = await contract.methods.InvestorList().call();\r\n        setInvestorList(investorList);\r\n\r\n        contract && setLists();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <section className=\"main-section\">\r\n        {component}\r\n        <div id=\"investorList\" className=\"lists\">\r\n          <h3>Investor's List</h3>\r\n          {InverstorList.map((list) => {\r\n            return (\r\n              <p key={list} className=\"investor-list\">\r\n                {list}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        <div id=\"proposalList\" className=\"lists\">\r\n          <h3>Proposal's List</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Proposal ID</th>\r\n                <th>Description</th>\r\n                <th>Amount</th>\r\n                <th>Recipient</th>\r\n                <th>Votes</th>\r\n                <th>Time</th>\r\n                <th>Executed?</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {ProposalList.map((list) => (\r\n                <tr key={list.id} className=\"proposal-list\">\r\n                  <td>{parseInt(list.id)}</td>\r\n                  <td>{list.description}</td>\r\n                  <td>{parseInt(list.amount)}</td>\r\n                  <td>{list.receipient}</td>\r\n                  <td>{parseInt(list.votes) / 1e18}</td>\r\n                  <td>\r\n                    {new Date(parseInt(list.end) * 1000).toLocaleString()}\r\n                  </td>\r\n                  <td>{list.isExecuted ? \"Yes\" : \"No\"}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n      <section className=\"primary-section\"></section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}